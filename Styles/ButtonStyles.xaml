<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">
    <!--  Menu button  -->
    <Style x:Key="MenuButton" TargetType="RadioButton">
        <!--  Normal button style  -->
        <Setter Property="Height" Value="40" />
        <Setter Property="Margin" Value="0,0,0,102" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="5,0,0,0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--  Button Style on hover  -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="0,0,0,102" />
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>

            <!--  Activated button style  -->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Margin" Value="5,0,0,102" />
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Menu button icon  -->
    <Style x:Key="MenuButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground"
                Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Margin" Value="0,0,0,0" />

    </Style>

    <!--  Control bar button  -->
    <Style x:Key="ControlButton" TargetType="Button">
        <!--  Normal button style  -->
        <Setter Property="Width" Value="35" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource actionButtons}" />
        <Setter Property="Margin" Value="10,5,0,0" />
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Menu button icon  -->
    <Style x:Key="ControlButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground"
                Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
        <Setter Property="Width" Value="15" />
        <Setter Property="Height" Value="15" />

    </Style>

    <!--  Icon button  -->
    <Style x:Key="IconButton" TargetType="Button">
        <!--  Normal button style  -->
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Width" Value="25" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource actionButtons}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Menu button icon  -->
    <Style x:Key="IconButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground"
                Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
    </Style>

    <!--  Card Button  -->
    <Style x:Key="CardButton" TargetType="Button">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="{DynamicResource SFUIDisplay}" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="#1e355e" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{TemplateBinding Background}"
                        CornerRadius="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#1e355e" />
                <Setter Property="Background" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--#region Add Button  --> 
    <Style x:Key="BtnAgregarStyle" TargetType="Button">
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="#1e355e" />
        <Setter Property="Foreground" Value="#1e355e" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="15" Padding="5" BorderThickness="2"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightGray" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Icon add Style-->
    <Style x:Key="AddIconStyle" TargetType="fa:IconImage">
        <Setter Property="Icon" Value="CirclePlus"/>
        <Setter Property="Foreground" Value="#1e355e"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="3"/>
        <!--<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <!--TextBlock add Style-->
    <Style x:Key="TextBlockAddStyle" TargetType="TextBlock">
        <Setter Property="Text" Value="Agregar" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Foreground" Value="#1e355e"/>
        <Setter Property="VerticalAlignment" Value="center"/>
        <Setter Property="Margin" Value="10,0,10,0"/>
        <!--<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <!--#endregion  Add Button  -->


    <!--#region grid Edit Button-->
    <Style x:Key="GridEditButton" TargetType="Button" BasedOn="{StaticResource BtnAgregarStyle}" > 
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#1e355e" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  grid Icon Style -->
    <Style x:Key="gridEditIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="#1e355e"/>
        <Setter Property="Height" Value="22" />
        <Setter Property="Width" Value="22" />
        <Setter Property="Icon" Value="Trash"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion grid Edit Button-->


    <!--#region grid Delete Button  -->
    <Style x:Key="GridDeleteButton" TargetType="Button" BasedOn="{StaticResource BtnAgregarStyle}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  grid Delete Icon Style -->
    <Style x:Key="gridDeleteIcon" TargetType="fa:IconImage">
        <Setter Property="Width" Value="22" />
        <Setter Property="Height" Value="22" />
        <Setter Property="Icon" Value="Trash"/>
        <Setter Property="Foreground" Value="#1e355e"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion grid Delete Button-->

</ResourceDictionary>